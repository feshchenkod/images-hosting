services:
  app:
    build: .
    container_name: images-hosting
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./logs:/logs
      - ./images:/images

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: unless-stopped
    depends_on:
      - app
    env_file:
      - .env
    command: >
      caddy reverse-proxy
      --from ${DOMAIN}
      --to app:8000
    ports:
      - 80:80
      - 443:443
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  db:
    image: postgres:17
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 127.0.0.1:5432:5432

volumes:
  caddy_data:
  caddy_config:
  pgdata:
